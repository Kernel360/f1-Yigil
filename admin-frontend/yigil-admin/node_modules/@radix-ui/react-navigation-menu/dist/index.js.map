{"mappings":"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","sources":["packages/react/navigation-menu/src/index.ts","packages/react/navigation-menu/src/NavigationMenu.tsx"],"sourcesContent":["export {\n  createNavigationMenuScope,\n  //\n  NavigationMenu,\n  NavigationMenuSub,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuContent,\n  NavigationMenuViewport,\n  //\n  Root,\n  Sub,\n  List,\n  Item,\n  Trigger,\n  Link,\n  Indicator,\n  Content,\n  Viewport,\n} from './NavigationMenu';\nexport type {\n  NavigationMenuProps,\n  NavigationMenuSubProps,\n  NavigationMenuListProps,\n  NavigationMenuItemProps,\n  NavigationMenuTriggerProps,\n  NavigationMenuLinkProps,\n  NavigationMenuIndicatorProps,\n  NavigationMenuContentProps,\n  NavigationMenuViewportProps,\n} from './NavigationMenu';\n","/// <reference types=\"resize-observer-browser\" />\n\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { composeRefs, useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { Presence } from '@radix-ui/react-presence';\nimport { useId } from '@radix-ui/react-id';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport * as VisuallyHiddenPrimitive from '@radix-ui/react-visually-hidden';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Orientation = 'vertical' | 'horizontal';\ntype Direction = 'ltr' | 'rtl';\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenu\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAVIGATION_MENU_NAME = 'NavigationMenu';\n\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  NavigationMenuTriggerElement,\n  { value: string }\n>(NAVIGATION_MENU_NAME);\n\nconst [FocusGroupCollection, useFocusGroupCollection, createFocusGroupCollectionScope] =\n  createCollection<FocusGroupItemElement, {}>(NAVIGATION_MENU_NAME);\n\ntype ScopedProps<P> = P & { __scopeNavigationMenu?: Scope };\nconst [createNavigationMenuContext, createNavigationMenuScope] = createContextScope(\n  NAVIGATION_MENU_NAME,\n  [createCollectionScope, createFocusGroupCollectionScope]\n);\n\ntype ContentData = {\n  ref?: React.Ref<ViewportContentMounterElement>;\n} & ViewportContentMounterProps;\n\ntype NavigationMenuContextValue = {\n  isRootMenu: boolean;\n  value: string;\n  previousValue: string;\n  baseId: string;\n  dir: Direction;\n  orientation: Orientation;\n  rootNavigationMenu: NavigationMenuElement | null;\n  indicatorTrack: HTMLDivElement | null;\n  onIndicatorTrackChange(indicatorTrack: HTMLDivElement | null): void;\n  viewport: NavigationMenuViewportElement | null;\n  onViewportChange(viewport: NavigationMenuViewportElement | null): void;\n  onViewportContentChange(contentValue: string, contentData: ContentData): void;\n  onViewportContentRemove(contentValue: string): void;\n  onTriggerEnter(itemValue: string): void;\n  onTriggerLeave(): void;\n  onContentEnter(): void;\n  onContentLeave(): void;\n  onItemSelect(itemValue: string): void;\n  onItemDismiss(): void;\n};\n\nconst [NavigationMenuProviderImpl, useNavigationMenuContext] =\n  createNavigationMenuContext<NavigationMenuContextValue>(NAVIGATION_MENU_NAME);\n\nconst [ViewportContentProvider, useViewportContentContext] = createNavigationMenuContext<{\n  items: Map<string, ContentData>;\n}>(NAVIGATION_MENU_NAME);\n\ntype NavigationMenuElement = React.ElementRef<typeof Primitive.nav>;\ntype PrimitiveNavProps = Radix.ComponentPropsWithoutRef<typeof Primitive.nav>;\ninterface NavigationMenuProps\n  extends Omit<NavigationMenuProviderProps, keyof NavigationMenuProviderPrivateProps>,\n    PrimitiveNavProps {\n  value?: string;\n  defaultValue?: string;\n  onValueChange?: (value: string) => void;\n  dir?: Direction;\n  orientation?: Orientation;\n  /**\n   * The duration from when the pointer enters the trigger until the tooltip gets opened.\n   * @defaultValue 200\n   */\n  delayDuration?: number;\n  /**\n   * How much time a user has to enter another trigger without incurring a delay again.\n   * @defaultValue 300\n   */\n  skipDelayDuration?: number;\n}\n\nconst NavigationMenu = React.forwardRef<NavigationMenuElement, NavigationMenuProps>(\n  (props: ScopedProps<NavigationMenuProps>, forwardedRef) => {\n    const {\n      __scopeNavigationMenu,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      delayDuration = 200,\n      skipDelayDuration = 300,\n      orientation = 'horizontal',\n      dir,\n      ...NavigationMenuProps\n    } = props;\n    const [navigationMenu, setNavigationMenu] = React.useState<NavigationMenuElement | null>(null);\n    const composedRef = useComposedRefs(forwardedRef, (node) => setNavigationMenu(node));\n    const direction = useDirection(dir);\n    const openTimerRef = React.useRef(0);\n    const closeTimerRef = React.useRef(0);\n    const skipDelayTimerRef = React.useRef(0);\n    const [isOpenDelayed, setIsOpenDelayed] = React.useState(true);\n    const [value = '', setValue] = useControllableState({\n      prop: valueProp,\n      onChange: (value) => {\n        const isOpen = value !== '';\n        const hasSkipDelayDuration = skipDelayDuration > 0;\n\n        if (isOpen) {\n          window.clearTimeout(skipDelayTimerRef.current);\n          if (hasSkipDelayDuration) setIsOpenDelayed(false);\n        } else {\n          window.clearTimeout(skipDelayTimerRef.current);\n          skipDelayTimerRef.current = window.setTimeout(\n            () => setIsOpenDelayed(true),\n            skipDelayDuration\n          );\n        }\n\n        onValueChange?.(value);\n      },\n      defaultProp: defaultValue,\n    });\n\n    const startCloseTimer = React.useCallback(() => {\n      window.clearTimeout(closeTimerRef.current);\n      closeTimerRef.current = window.setTimeout(() => setValue(''), 150);\n    }, [setValue]);\n\n    const handleOpen = React.useCallback(\n      (itemValue: string) => {\n        window.clearTimeout(closeTimerRef.current);\n        setValue(itemValue);\n      },\n      [setValue]\n    );\n\n    const handleDelayedOpen = React.useCallback(\n      (itemValue: string) => {\n        const isOpenItem = value === itemValue;\n        if (isOpenItem) {\n          // If the item is already open (e.g. we're transitioning from the content to the trigger)\n          // then we want to clear the close timer immediately.\n          window.clearTimeout(closeTimerRef.current);\n        } else {\n          openTimerRef.current = window.setTimeout(() => {\n            window.clearTimeout(closeTimerRef.current);\n            setValue(itemValue);\n          }, delayDuration);\n        }\n      },\n      [value, setValue, delayDuration]\n    );\n\n    React.useEffect(() => {\n      return () => {\n        window.clearTimeout(openTimerRef.current);\n        window.clearTimeout(closeTimerRef.current);\n        window.clearTimeout(skipDelayTimerRef.current);\n      };\n    }, []);\n\n    return (\n      <NavigationMenuProvider\n        scope={__scopeNavigationMenu}\n        isRootMenu={true}\n        value={value}\n        dir={direction}\n        orientation={orientation}\n        rootNavigationMenu={navigationMenu}\n        onTriggerEnter={(itemValue) => {\n          window.clearTimeout(openTimerRef.current);\n          if (isOpenDelayed) handleDelayedOpen(itemValue);\n          else handleOpen(itemValue);\n        }}\n        onTriggerLeave={() => {\n          window.clearTimeout(openTimerRef.current);\n          startCloseTimer();\n        }}\n        onContentEnter={() => window.clearTimeout(closeTimerRef.current)}\n        onContentLeave={startCloseTimer}\n        onItemSelect={(itemValue) => {\n          setValue((prevValue) => (prevValue === itemValue ? '' : itemValue));\n        }}\n        onItemDismiss={() => setValue('')}\n      >\n        <Primitive.nav\n          aria-label=\"Main\"\n          data-orientation={orientation}\n          dir={direction}\n          {...NavigationMenuProps}\n          ref={composedRef}\n        />\n      </NavigationMenuProvider>\n    );\n  }\n);\n\nNavigationMenu.displayName = NAVIGATION_MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuSub\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_NAME = 'NavigationMenuSub';\n\ntype NavigationMenuSubElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface NavigationMenuSubProps\n  extends Omit<NavigationMenuProviderProps, keyof NavigationMenuProviderPrivateProps>,\n    PrimitiveDivProps {\n  value?: string;\n  defaultValue?: string;\n  onValueChange?: (value: string) => void;\n  orientation?: Orientation;\n}\n\nconst NavigationMenuSub = React.forwardRef<NavigationMenuSubElement, NavigationMenuSubProps>(\n  (props: ScopedProps<NavigationMenuSubProps>, forwardedRef) => {\n    const {\n      __scopeNavigationMenu,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = 'horizontal',\n      ...subProps\n    } = props;\n    const context = useNavigationMenuContext(SUB_NAME, __scopeNavigationMenu);\n    const [value = '', setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue,\n    });\n\n    return (\n      <NavigationMenuProvider\n        scope={__scopeNavigationMenu}\n        isRootMenu={false}\n        value={value}\n        dir={context.dir}\n        orientation={orientation}\n        rootNavigationMenu={context.rootNavigationMenu}\n        onTriggerEnter={(itemValue) => setValue(itemValue)}\n        onItemSelect={(itemValue) => setValue(itemValue)}\n        onItemDismiss={() => setValue('')}\n      >\n        <Primitive.div data-orientation={orientation} {...subProps} ref={forwardedRef} />\n      </NavigationMenuProvider>\n    );\n  }\n);\n\nNavigationMenuSub.displayName = SUB_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ninterface NavigationMenuProviderPrivateProps {\n  isRootMenu: boolean;\n  scope: Scope;\n  children: React.ReactNode;\n  orientation: Orientation;\n  dir: Direction;\n  rootNavigationMenu: NavigationMenuElement | null;\n  value: string;\n  onTriggerEnter(itemValue: string): void;\n  onTriggerLeave?(): void;\n  onContentEnter?(): void;\n  onContentLeave?(): void;\n  onItemSelect(itemValue: string): void;\n  onItemDismiss(): void;\n}\n\ninterface NavigationMenuProviderProps extends NavigationMenuProviderPrivateProps {}\n\nconst NavigationMenuProvider: React.FC<NavigationMenuProviderProps> = (\n  props: ScopedProps<NavigationMenuProviderProps>\n) => {\n  const {\n    scope,\n    isRootMenu,\n    rootNavigationMenu,\n    dir,\n    orientation,\n    children,\n    value,\n    onItemSelect,\n    onItemDismiss,\n    onTriggerEnter,\n    onTriggerLeave,\n    onContentEnter,\n    onContentLeave,\n  } = props;\n  const [viewport, setViewport] = React.useState<NavigationMenuViewportElement | null>(null);\n  const [viewportContent, setViewportContent] = React.useState<Map<string, ContentData>>(new Map());\n  const [indicatorTrack, setIndicatorTrack] = React.useState<HTMLDivElement | null>(null);\n\n  return (\n    <NavigationMenuProviderImpl\n      scope={scope}\n      isRootMenu={isRootMenu}\n      rootNavigationMenu={rootNavigationMenu}\n      value={value}\n      previousValue={usePrevious(value)}\n      baseId={useId()}\n      dir={dir}\n      orientation={orientation}\n      viewport={viewport}\n      onViewportChange={setViewport}\n      indicatorTrack={indicatorTrack}\n      onIndicatorTrackChange={setIndicatorTrack}\n      onTriggerEnter={useCallbackRef(onTriggerEnter)}\n      onTriggerLeave={useCallbackRef(onTriggerLeave)}\n      onContentEnter={useCallbackRef(onContentEnter)}\n      onContentLeave={useCallbackRef(onContentLeave)}\n      onItemSelect={useCallbackRef(onItemSelect)}\n      onItemDismiss={useCallbackRef(onItemDismiss)}\n      onViewportContentChange={React.useCallback((contentValue, contentData) => {\n        setViewportContent((prevContent) => {\n          prevContent.set(contentValue, contentData);\n          return new Map(prevContent);\n        });\n      }, [])}\n      onViewportContentRemove={React.useCallback((contentValue) => {\n        setViewportContent((prevContent) => {\n          if (!prevContent.has(contentValue)) return prevContent;\n          prevContent.delete(contentValue);\n          return new Map(prevContent);\n        });\n      }, [])}\n    >\n      <Collection.Provider scope={scope}>\n        <ViewportContentProvider scope={scope} items={viewportContent}>\n          {children}\n        </ViewportContentProvider>\n      </Collection.Provider>\n    </NavigationMenuProviderImpl>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuList\n * -----------------------------------------------------------------------------------------------*/\n\nconst LIST_NAME = 'NavigationMenuList';\n\ntype NavigationMenuListElement = React.ElementRef<typeof Primitive.ul>;\ntype PrimitiveUnorderedListProps = Radix.ComponentPropsWithoutRef<typeof Primitive.ul>;\ninterface NavigationMenuListProps extends PrimitiveUnorderedListProps {}\n\nconst NavigationMenuList = React.forwardRef<NavigationMenuListElement, NavigationMenuListProps>(\n  (props: ScopedProps<NavigationMenuListProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, ...listProps } = props;\n    const context = useNavigationMenuContext(LIST_NAME, __scopeNavigationMenu);\n\n    const list = (\n      <Primitive.ul data-orientation={context.orientation} {...listProps} ref={forwardedRef} />\n    );\n\n    return (\n      <Primitive.div style={{ position: 'relative' }} ref={context.onIndicatorTrackChange}>\n        <Collection.Slot scope={__scopeNavigationMenu}>\n          {context.isRootMenu ? <FocusGroup asChild>{list}</FocusGroup> : list}\n        </Collection.Slot>\n      </Primitive.div>\n    );\n  }\n);\n\nNavigationMenuList.displayName = LIST_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'NavigationMenuItem';\n\ntype FocusProxyElement = React.ElementRef<typeof VisuallyHiddenPrimitive.Root>;\n\ntype NavigationMenuItemContextValue = {\n  value: string;\n  triggerRef: React.RefObject<NavigationMenuTriggerElement>;\n  contentRef: React.RefObject<NavigationMenuContentElement>;\n  focusProxyRef: React.RefObject<FocusProxyElement>;\n  wasEscapeCloseRef: React.MutableRefObject<boolean>;\n  onEntryKeyDown(): void;\n  onFocusProxyEnter(side: 'start' | 'end'): void;\n  onRootContentClose(): void;\n  onContentFocusOutside(): void;\n};\n\nconst [NavigationMenuItemContextProvider, useNavigationMenuItemContext] =\n  createNavigationMenuContext<NavigationMenuItemContextValue>(ITEM_NAME);\n\ntype NavigationMenuItemElement = React.ElementRef<typeof Primitive.li>;\ntype PrimitiveListItemProps = Radix.ComponentPropsWithoutRef<typeof Primitive.li>;\ninterface NavigationMenuItemProps extends PrimitiveListItemProps {\n  value?: string;\n}\n\nconst NavigationMenuItem = React.forwardRef<NavigationMenuItemElement, NavigationMenuItemProps>(\n  (props: ScopedProps<NavigationMenuItemProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, value: valueProp, ...itemProps } = props;\n    const autoValue = useId();\n    // We need to provide an initial deterministic value as `useId` will return\n    // empty string on the first render and we don't want to match our internal \"closed\" value.\n    const value = valueProp || autoValue || 'LEGACY_REACT_AUTO_VALUE';\n    const contentRef = React.useRef<NavigationMenuContentElement>(null);\n    const triggerRef = React.useRef<NavigationMenuTriggerElement>(null);\n    const focusProxyRef = React.useRef<FocusProxyElement>(null);\n    const restoreContentTabOrderRef = React.useRef(() => {});\n    const wasEscapeCloseRef = React.useRef(false);\n\n    const handleContentEntry = React.useCallback((side = 'start') => {\n      if (contentRef.current) {\n        restoreContentTabOrderRef.current();\n        const candidates = getTabbableCandidates(contentRef.current);\n        if (candidates.length) focusFirst(side === 'start' ? candidates : candidates.reverse());\n      }\n    }, []);\n\n    const handleContentExit = React.useCallback(() => {\n      if (contentRef.current) {\n        const candidates = getTabbableCandidates(contentRef.current);\n        if (candidates.length) restoreContentTabOrderRef.current = removeFromTabOrder(candidates);\n      }\n    }, []);\n\n    return (\n      <NavigationMenuItemContextProvider\n        scope={__scopeNavigationMenu}\n        value={value}\n        triggerRef={triggerRef}\n        contentRef={contentRef}\n        focusProxyRef={focusProxyRef}\n        wasEscapeCloseRef={wasEscapeCloseRef}\n        onEntryKeyDown={handleContentEntry}\n        onFocusProxyEnter={handleContentEntry}\n        onRootContentClose={handleContentExit}\n        onContentFocusOutside={handleContentExit}\n      >\n        <Primitive.li {...itemProps} ref={forwardedRef} />\n      </NavigationMenuItemContextProvider>\n    );\n  }\n);\n\nNavigationMenuItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'NavigationMenuTrigger';\n\ntype NavigationMenuTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface NavigationMenuTriggerProps extends PrimitiveButtonProps {}\n\nconst NavigationMenuTrigger = React.forwardRef<\n  NavigationMenuTriggerElement,\n  NavigationMenuTriggerProps\n>((props: ScopedProps<NavigationMenuTriggerProps>, forwardedRef) => {\n  const { __scopeNavigationMenu, disabled, ...triggerProps } = props;\n  const context = useNavigationMenuContext(TRIGGER_NAME, props.__scopeNavigationMenu);\n  const itemContext = useNavigationMenuItemContext(TRIGGER_NAME, props.__scopeNavigationMenu);\n  const ref = React.useRef<NavigationMenuTriggerElement>(null);\n  const composedRefs = useComposedRefs(ref, itemContext.triggerRef, forwardedRef);\n  const triggerId = makeTriggerId(context.baseId, itemContext.value);\n  const contentId = makeContentId(context.baseId, itemContext.value);\n  const hasPointerMoveOpenedRef = React.useRef(false);\n  const wasClickCloseRef = React.useRef(false);\n  const open = itemContext.value === context.value;\n\n  return (\n    <>\n      <Collection.ItemSlot scope={__scopeNavigationMenu} value={itemContext.value}>\n        <FocusGroupItem asChild>\n          <Primitive.button\n            id={triggerId}\n            disabled={disabled}\n            data-disabled={disabled ? '' : undefined}\n            data-state={getOpenState(open)}\n            aria-expanded={open}\n            aria-controls={contentId}\n            {...triggerProps}\n            ref={composedRefs}\n            onPointerEnter={composeEventHandlers(props.onPointerEnter, () => {\n              wasClickCloseRef.current = false;\n              itemContext.wasEscapeCloseRef.current = false;\n            })}\n            onPointerMove={composeEventHandlers(\n              props.onPointerMove,\n              whenMouse(() => {\n                if (\n                  disabled ||\n                  wasClickCloseRef.current ||\n                  itemContext.wasEscapeCloseRef.current ||\n                  hasPointerMoveOpenedRef.current\n                )\n                  return;\n                context.onTriggerEnter(itemContext.value);\n                hasPointerMoveOpenedRef.current = true;\n              })\n            )}\n            onPointerLeave={composeEventHandlers(\n              props.onPointerLeave,\n              whenMouse(() => {\n                if (disabled) return;\n                context.onTriggerLeave();\n                hasPointerMoveOpenedRef.current = false;\n              })\n            )}\n            onClick={composeEventHandlers(props.onClick, () => {\n              context.onItemSelect(itemContext.value);\n              wasClickCloseRef.current = open;\n            })}\n            onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n              const verticalEntryKey = context.dir === 'rtl' ? 'ArrowLeft' : 'ArrowRight';\n              const entryKey = { horizontal: 'ArrowDown', vertical: verticalEntryKey }[\n                context.orientation\n              ];\n              if (open && event.key === entryKey) {\n                itemContext.onEntryKeyDown();\n                // Prevent FocusGroupItem from handling the event\n                event.preventDefault();\n              }\n            })}\n          />\n        </FocusGroupItem>\n      </Collection.ItemSlot>\n\n      {/* Proxy tab order between trigger and content */}\n      {open && (\n        <>\n          <VisuallyHiddenPrimitive.Root\n            aria-hidden\n            tabIndex={0}\n            ref={itemContext.focusProxyRef}\n            onFocus={(event) => {\n              const content = itemContext.contentRef.current;\n              const prevFocusedElement = event.relatedTarget as HTMLElement | null;\n              const wasTriggerFocused = prevFocusedElement === ref.current;\n              const wasFocusFromContent = content?.contains(prevFocusedElement);\n\n              if (wasTriggerFocused || !wasFocusFromContent) {\n                itemContext.onFocusProxyEnter(wasTriggerFocused ? 'start' : 'end');\n              }\n            }}\n          />\n\n          {/* Restructure a11y tree to make content accessible to screen reader when using the viewport */}\n          {context.viewport && <span aria-owns={contentId} />}\n        </>\n      )}\n    </>\n  );\n});\n\nNavigationMenuTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuLink\n * -----------------------------------------------------------------------------------------------*/\n\nconst LINK_NAME = 'NavigationMenuLink';\nconst LINK_SELECT = 'navigationMenu.linkSelect';\n\ntype NavigationMenuLinkElement = React.ElementRef<typeof Primitive.a>;\ntype PrimitiveLinkProps = Radix.ComponentPropsWithoutRef<typeof Primitive.a>;\ninterface NavigationMenuLinkProps extends Omit<PrimitiveLinkProps, 'onSelect'> {\n  active?: boolean;\n  onSelect?: (event: Event) => void;\n}\n\nconst NavigationMenuLink = React.forwardRef<NavigationMenuLinkElement, NavigationMenuLinkProps>(\n  (props: ScopedProps<NavigationMenuLinkProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, active, onSelect, ...linkProps } = props;\n\n    return (\n      <FocusGroupItem asChild>\n        <Primitive.a\n          data-active={active ? '' : undefined}\n          aria-current={active ? 'page' : undefined}\n          {...linkProps}\n          ref={forwardedRef}\n          onClick={composeEventHandlers(\n            props.onClick,\n            (event) => {\n              const target = event.target as HTMLElement;\n              const linkSelectEvent = new CustomEvent(LINK_SELECT, {\n                bubbles: true,\n                cancelable: true,\n              });\n              target.addEventListener(LINK_SELECT, (event) => onSelect?.(event), { once: true });\n              dispatchDiscreteCustomEvent(target, linkSelectEvent);\n\n              if (!linkSelectEvent.defaultPrevented && !event.metaKey) {\n                const rootContentDismissEvent = new CustomEvent(ROOT_CONTENT_DISMISS, {\n                  bubbles: true,\n                  cancelable: true,\n                });\n                dispatchDiscreteCustomEvent(target, rootContentDismissEvent);\n              }\n            },\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </FocusGroupItem>\n    );\n  }\n);\n\nNavigationMenuLink.displayName = LINK_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'NavigationMenuIndicator';\n\ntype NavigationMenuIndicatorElement = NavigationMenuIndicatorImplElement;\ninterface NavigationMenuIndicatorProps extends NavigationMenuIndicatorImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst NavigationMenuIndicator = React.forwardRef<\n  NavigationMenuIndicatorElement,\n  NavigationMenuIndicatorProps\n>((props: ScopedProps<NavigationMenuIndicatorProps>, forwardedRef) => {\n  const { forceMount, ...indicatorProps } = props;\n  const context = useNavigationMenuContext(INDICATOR_NAME, props.__scopeNavigationMenu);\n  const isVisible = Boolean(context.value);\n\n  return context.indicatorTrack\n    ? ReactDOM.createPortal(\n        <Presence present={forceMount || isVisible}>\n          <NavigationMenuIndicatorImpl {...indicatorProps} ref={forwardedRef} />\n        </Presence>,\n        context.indicatorTrack\n      )\n    : null;\n});\n\nNavigationMenuIndicator.displayName = INDICATOR_NAME;\n\ntype NavigationMenuIndicatorImplElement = React.ElementRef<typeof Primitive.div>;\ninterface NavigationMenuIndicatorImplProps extends PrimitiveDivProps {}\n\nconst NavigationMenuIndicatorImpl = React.forwardRef<\n  NavigationMenuIndicatorImplElement,\n  NavigationMenuIndicatorImplProps\n>((props: ScopedProps<NavigationMenuIndicatorImplProps>, forwardedRef) => {\n  const { __scopeNavigationMenu, ...indicatorProps } = props;\n  const context = useNavigationMenuContext(INDICATOR_NAME, __scopeNavigationMenu);\n  const getItems = useCollection(__scopeNavigationMenu);\n  const [activeTrigger, setActiveTrigger] = React.useState<NavigationMenuTriggerElement | null>(\n    null\n  );\n  const [position, setPosition] = React.useState<{ size: number; offset: number } | null>(null);\n  const isHorizontal = context.orientation === 'horizontal';\n  const isVisible = Boolean(context.value);\n\n  React.useEffect(() => {\n    const items = getItems();\n    const triggerNode = items.find((item) => item.value === context.value)?.ref.current;\n    if (triggerNode) setActiveTrigger(triggerNode);\n  }, [getItems, context.value]);\n\n  /**\n   * Update position when the indicator or parent track size changes\n   */\n  const handlePositionChange = () => {\n    if (activeTrigger) {\n      setPosition({\n        size: isHorizontal ? activeTrigger.offsetWidth : activeTrigger.offsetHeight,\n        offset: isHorizontal ? activeTrigger.offsetLeft : activeTrigger.offsetTop,\n      });\n    }\n  };\n  useResizeObserver(activeTrigger, handlePositionChange);\n  useResizeObserver(context.indicatorTrack, handlePositionChange);\n\n  // We need to wait for the indicator position to be available before rendering to\n  // snap immediately into position rather than transitioning from initial\n  return position ? (\n    <Primitive.div\n      aria-hidden\n      data-state={isVisible ? 'visible' : 'hidden'}\n      data-orientation={context.orientation}\n      {...indicatorProps}\n      ref={forwardedRef}\n      style={{\n        position: 'absolute',\n        ...(isHorizontal\n          ? {\n              left: 0,\n              width: position.size + 'px',\n              transform: `translateX(${position.offset}px)`,\n            }\n          : {\n              top: 0,\n              height: position.size + 'px',\n              transform: `translateY(${position.offset}px)`,\n            }),\n        ...indicatorProps.style,\n      }}\n    />\n  ) : null;\n});\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'NavigationMenuContent';\n\ntype NavigationMenuContentElement = NavigationMenuContentImplElement;\ninterface NavigationMenuContentProps\n  extends Omit<NavigationMenuContentImplProps, keyof NavigationMenuContentImplPrivateProps> {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst NavigationMenuContent = React.forwardRef<\n  NavigationMenuContentElement,\n  NavigationMenuContentProps\n>((props: ScopedProps<NavigationMenuContentProps>, forwardedRef) => {\n  const { forceMount, ...contentProps } = props;\n  const context = useNavigationMenuContext(CONTENT_NAME, props.__scopeNavigationMenu);\n  const itemContext = useNavigationMenuItemContext(CONTENT_NAME, props.__scopeNavigationMenu);\n  const composedRefs = useComposedRefs(itemContext.contentRef, forwardedRef);\n  const open = itemContext.value === context.value;\n\n  const commonProps = {\n    value: itemContext.value,\n    triggerRef: itemContext.triggerRef,\n    focusProxyRef: itemContext.focusProxyRef,\n    wasEscapeCloseRef: itemContext.wasEscapeCloseRef,\n    onContentFocusOutside: itemContext.onContentFocusOutside,\n    onRootContentClose: itemContext.onRootContentClose,\n    ...contentProps,\n  };\n\n  return !context.viewport ? (\n    <Presence present={forceMount || open}>\n      <NavigationMenuContentImpl\n        data-state={getOpenState(open)}\n        {...commonProps}\n        ref={composedRefs}\n        onPointerEnter={composeEventHandlers(props.onPointerEnter, context.onContentEnter)}\n        onPointerLeave={composeEventHandlers(\n          props.onPointerLeave,\n          whenMouse(context.onContentLeave)\n        )}\n        style={{\n          // Prevent interaction when animating out\n          pointerEvents: !open && context.isRootMenu ? 'none' : undefined,\n          ...commonProps.style,\n        }}\n      />\n    </Presence>\n  ) : (\n    <ViewportContentMounter forceMount={forceMount} {...commonProps} ref={composedRefs} />\n  );\n});\n\nNavigationMenuContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ViewportContentMounterElement = NavigationMenuContentImplElement;\ninterface ViewportContentMounterProps extends NavigationMenuContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst ViewportContentMounter = React.forwardRef<\n  ViewportContentMounterElement,\n  ViewportContentMounterProps\n>((props: ScopedProps<ViewportContentMounterProps>, forwardedRef) => {\n  const context = useNavigationMenuContext(CONTENT_NAME, props.__scopeNavigationMenu);\n  const { onViewportContentChange, onViewportContentRemove } = context;\n\n  useLayoutEffect(() => {\n    onViewportContentChange(props.value, {\n      ref: forwardedRef,\n      ...props,\n    });\n  }, [props, forwardedRef, onViewportContentChange]);\n\n  useLayoutEffect(() => {\n    return () => onViewportContentRemove(props.value);\n  }, [props.value, onViewportContentRemove]);\n\n  // Content is proxied into the viewport\n  return null;\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst ROOT_CONTENT_DISMISS = 'navigationMenu.rootContentDismiss';\n\ntype MotionAttribute = 'to-start' | 'to-end' | 'from-start' | 'from-end';\ntype NavigationMenuContentImplElement = React.ElementRef<typeof DismissableLayer>;\ntype DismissableLayerProps = Radix.ComponentPropsWithoutRef<typeof DismissableLayer>;\n\ninterface NavigationMenuContentImplPrivateProps {\n  value: string;\n  triggerRef: React.RefObject<NavigationMenuTriggerElement>;\n  focusProxyRef: React.RefObject<FocusProxyElement>;\n  wasEscapeCloseRef: React.MutableRefObject<boolean>;\n  onContentFocusOutside(): void;\n  onRootContentClose(): void;\n}\ninterface NavigationMenuContentImplProps\n  extends Omit<DismissableLayerProps, 'onDismiss'>,\n    NavigationMenuContentImplPrivateProps {}\n\nconst NavigationMenuContentImpl = React.forwardRef<\n  NavigationMenuContentImplElement,\n  NavigationMenuContentImplProps\n>((props: ScopedProps<NavigationMenuContentImplProps>, forwardedRef) => {\n  const {\n    __scopeNavigationMenu,\n    value,\n    triggerRef,\n    focusProxyRef,\n    wasEscapeCloseRef,\n    onRootContentClose,\n    onContentFocusOutside,\n    ...contentProps\n  } = props;\n  const context = useNavigationMenuContext(CONTENT_NAME, __scopeNavigationMenu);\n  const ref = React.useRef<NavigationMenuContentImplElement>(null);\n  const composedRefs = useComposedRefs(ref, forwardedRef);\n  const triggerId = makeTriggerId(context.baseId, value);\n  const contentId = makeContentId(context.baseId, value);\n  const getItems = useCollection(__scopeNavigationMenu);\n  const prevMotionAttributeRef = React.useRef<MotionAttribute | null>(null);\n\n  const { onItemDismiss } = context;\n\n  React.useEffect(() => {\n    const content = ref.current;\n\n    // Bubble dismiss to the root content node and focus its trigger\n    if (context.isRootMenu && content) {\n      const handleClose = () => {\n        onItemDismiss();\n        onRootContentClose();\n        if (content.contains(document.activeElement)) triggerRef.current?.focus();\n      };\n      content.addEventListener(ROOT_CONTENT_DISMISS, handleClose);\n      return () => content.removeEventListener(ROOT_CONTENT_DISMISS, handleClose);\n    }\n  }, [context.isRootMenu, props.value, triggerRef, onItemDismiss, onRootContentClose]);\n\n  const motionAttribute = React.useMemo(() => {\n    const items = getItems();\n    const values = items.map((item) => item.value);\n    if (context.dir === 'rtl') values.reverse();\n    const index = values.indexOf(context.value);\n    const prevIndex = values.indexOf(context.previousValue);\n    const isSelected = value === context.value;\n    const wasSelected = prevIndex === values.indexOf(value);\n\n    // We only want to update selected and the last selected content\n    // this avoids animations being interrupted outside of that range\n    if (!isSelected && !wasSelected) return prevMotionAttributeRef.current;\n\n    const attribute = (() => {\n      // Don't provide a direction on the initial open\n      if (index !== prevIndex) {\n        // If we're moving to this item from another\n        if (isSelected && prevIndex !== -1) return index > prevIndex ? 'from-end' : 'from-start';\n        // If we're leaving this item for another\n        if (wasSelected && index !== -1) return index > prevIndex ? 'to-start' : 'to-end';\n      }\n      // Otherwise we're entering from closed or leaving the list\n      // entirely and should not animate in any direction\n      return null;\n    })();\n\n    prevMotionAttributeRef.current = attribute;\n    return attribute;\n  }, [context.previousValue, context.value, context.dir, getItems, value]);\n\n  return (\n    <FocusGroup asChild>\n      <DismissableLayer\n        id={contentId}\n        aria-labelledby={triggerId}\n        data-motion={motionAttribute}\n        data-orientation={context.orientation}\n        {...contentProps}\n        ref={composedRefs}\n        onDismiss={() => {\n          const rootContentDismissEvent = new Event(ROOT_CONTENT_DISMISS, {\n            bubbles: true,\n            cancelable: true,\n          });\n          ref.current?.dispatchEvent(rootContentDismissEvent);\n        }}\n        onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) => {\n          onContentFocusOutside();\n          const target = event.target as HTMLElement;\n          // Only dismiss content when focus moves outside of the menu\n          if (context.rootNavigationMenu?.contains(target)) event.preventDefault();\n        })}\n        onPointerDownOutside={composeEventHandlers(props.onPointerDownOutside, (event) => {\n          const target = event.target as HTMLElement;\n          const isTrigger = getItems().some((item) => item.ref.current?.contains(target));\n          const isRootViewport = context.isRootMenu && context.viewport?.contains(target);\n          if (isTrigger || isRootViewport || !context.isRootMenu) event.preventDefault();\n        })}\n        onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n          const isMetaKey = event.altKey || event.ctrlKey || event.metaKey;\n          const isTabKey = event.key === 'Tab' && !isMetaKey;\n          if (isTabKey) {\n            const candidates = getTabbableCandidates(event.currentTarget);\n            const focusedElement = document.activeElement;\n            const index = candidates.findIndex((candidate) => candidate === focusedElement);\n            const isMovingBackwards = event.shiftKey;\n            const nextCandidates = isMovingBackwards\n              ? candidates.slice(0, index).reverse()\n              : candidates.slice(index + 1, candidates.length);\n\n            if (focusFirst(nextCandidates)) {\n              // prevent browser tab keydown because we've handled focus\n              event.preventDefault();\n            } else {\n              // If we can't focus that means we're at the edges\n              // so focus the proxy and let browser handle\n              // tab/shift+tab keypress on the proxy instead\n              focusProxyRef.current?.focus();\n            }\n          }\n        })}\n        onEscapeKeyDown={composeEventHandlers(props.onEscapeKeyDown, (event) => {\n          // prevent the dropdown from reopening\n          // after the escape key has been pressed\n          wasEscapeCloseRef.current = true;\n        })}\n      />\n    </FocusGroup>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuViewport\n * -----------------------------------------------------------------------------------------------*/\n\nconst VIEWPORT_NAME = 'NavigationMenuViewport';\n\ntype NavigationMenuViewportElement = NavigationMenuViewportImplElement;\ninterface NavigationMenuViewportProps\n  extends Omit<NavigationMenuViewportImplProps, 'children' | 'activeContentValue'> {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst NavigationMenuViewport = React.forwardRef<\n  NavigationMenuViewportElement,\n  NavigationMenuViewportProps\n>((props: ScopedProps<NavigationMenuViewportProps>, forwardedRef) => {\n  const { forceMount, ...viewportProps } = props;\n  const context = useNavigationMenuContext(VIEWPORT_NAME, props.__scopeNavigationMenu);\n  const open = Boolean(context.value);\n\n  return (\n    <Presence present={forceMount || open}>\n      <NavigationMenuViewportImpl {...viewportProps} ref={forwardedRef} />\n    </Presence>\n  );\n});\n\nNavigationMenuViewport.displayName = VIEWPORT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype NavigationMenuViewportImplElement = React.ElementRef<typeof Primitive.div>;\ninterface NavigationMenuViewportImplProps extends PrimitiveDivProps {}\n\nconst NavigationMenuViewportImpl = React.forwardRef<\n  NavigationMenuViewportImplElement,\n  NavigationMenuViewportImplProps\n>((props: ScopedProps<NavigationMenuViewportImplProps>, forwardedRef) => {\n  const { __scopeNavigationMenu, children, ...viewportImplProps } = props;\n  const context = useNavigationMenuContext(VIEWPORT_NAME, __scopeNavigationMenu);\n  const composedRefs = useComposedRefs(forwardedRef, context.onViewportChange);\n  const viewportContentContext = useViewportContentContext(\n    CONTENT_NAME,\n    props.__scopeNavigationMenu\n  );\n  const [size, setSize] = React.useState<{ width: number; height: number } | null>(null);\n  const [content, setContent] = React.useState<NavigationMenuContentElement | null>(null);\n  const viewportWidth = size ? size?.width + 'px' : undefined;\n  const viewportHeight = size ? size?.height + 'px' : undefined;\n  const open = Boolean(context.value);\n  // We persist the last active content value as the viewport may be animating out\n  // and we want the content to remain mounted for the lifecycle of the viewport.\n  const activeContentValue = open ? context.value : context.previousValue;\n\n  /**\n   * Update viewport size to match the active content node.\n   * We prefer offset dimensions over `getBoundingClientRect` as the latter respects CSS transform.\n   * For example, if content animates in from `scale(0.5)` the dimensions would be anything\n   * from `0.5` to `1` of the intended size.\n   */\n  const handleSizeChange = () => {\n    if (content) setSize({ width: content.offsetWidth, height: content.offsetHeight });\n  };\n  useResizeObserver(content, handleSizeChange);\n\n  return (\n    <Primitive.div\n      data-state={getOpenState(open)}\n      data-orientation={context.orientation}\n      {...viewportImplProps}\n      ref={composedRefs}\n      style={{\n        // Prevent interaction when animating out\n        pointerEvents: !open && context.isRootMenu ? 'none' : undefined,\n        ['--radix-navigation-menu-viewport-width' as any]: viewportWidth,\n        ['--radix-navigation-menu-viewport-height' as any]: viewportHeight,\n        ...viewportImplProps.style,\n      }}\n      onPointerEnter={composeEventHandlers(props.onPointerEnter, context.onContentEnter)}\n      onPointerLeave={composeEventHandlers(props.onPointerLeave, whenMouse(context.onContentLeave))}\n    >\n      {Array.from(viewportContentContext.items).map(([value, { ref, forceMount, ...props }]) => {\n        const isActive = activeContentValue === value;\n        return (\n          <Presence key={value} present={forceMount || isActive}>\n            <NavigationMenuContentImpl\n              {...props}\n              ref={composeRefs(ref, (node) => {\n                // We only want to update the stored node when another is available\n                // as we need to smoothly transition between them.\n                if (isActive && node) setContent(node);\n              })}\n            />\n          </Presence>\n        );\n      })}\n    </Primitive.div>\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst FOCUS_GROUP_NAME = 'FocusGroup';\n\ntype FocusGroupElement = React.ElementRef<typeof Primitive.div>;\ninterface FocusGroupProps extends PrimitiveDivProps {}\n\nconst FocusGroup = React.forwardRef<FocusGroupElement, FocusGroupProps>(\n  (props: ScopedProps<FocusGroupProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, ...groupProps } = props;\n    const context = useNavigationMenuContext(FOCUS_GROUP_NAME, __scopeNavigationMenu);\n\n    return (\n      <FocusGroupCollection.Provider scope={__scopeNavigationMenu}>\n        <FocusGroupCollection.Slot scope={__scopeNavigationMenu}>\n          <Primitive.div dir={context.dir} {...groupProps} ref={forwardedRef} />\n        </FocusGroupCollection.Slot>\n      </FocusGroupCollection.Provider>\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_KEYS = ['ArrowRight', 'ArrowLeft', 'ArrowUp', 'ArrowDown'];\nconst FOCUS_GROUP_ITEM_NAME = 'FocusGroupItem';\n\ntype FocusGroupItemElement = React.ElementRef<typeof Primitive.button>;\ninterface FocusGroupItemProps extends PrimitiveButtonProps {}\n\nconst FocusGroupItem = React.forwardRef<FocusGroupItemElement, FocusGroupItemProps>(\n  (props: ScopedProps<FocusGroupItemProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, ...groupProps } = props;\n    const getItems = useFocusGroupCollection(__scopeNavigationMenu);\n    const context = useNavigationMenuContext(FOCUS_GROUP_ITEM_NAME, __scopeNavigationMenu);\n\n    return (\n      <FocusGroupCollection.ItemSlot scope={__scopeNavigationMenu}>\n        <Primitive.button\n          {...groupProps}\n          ref={forwardedRef}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            const isFocusNavigationKey = ['Home', 'End', ...ARROW_KEYS].includes(event.key);\n            if (isFocusNavigationKey) {\n              let candidateNodes = getItems().map((item) => item.ref.current!);\n              const prevItemKey = context.dir === 'rtl' ? 'ArrowRight' : 'ArrowLeft';\n              const prevKeys = [prevItemKey, 'ArrowUp', 'End'];\n              if (prevKeys.includes(event.key)) candidateNodes.reverse();\n              if (ARROW_KEYS.includes(event.key)) {\n                const currentIndex = candidateNodes.indexOf(event.currentTarget);\n                candidateNodes = candidateNodes.slice(currentIndex + 1);\n              }\n              /**\n               * Imperative focus during keydown is risky so we prevent React's batching updates\n               * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n               */\n              setTimeout(() => focusFirst(candidateNodes));\n\n              // Prevent page scroll while navigating\n              event.preventDefault();\n            }\n          })}\n        />\n      </FocusGroupCollection.ItemSlot>\n    );\n  }\n);\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nfunction getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    },\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement);\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes;\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const previouslyFocusedElement = document.activeElement;\n  return candidates.some((candidate) => {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === previouslyFocusedElement) return true;\n    candidate.focus();\n    return document.activeElement !== previouslyFocusedElement;\n  });\n}\n\nfunction removeFromTabOrder(candidates: HTMLElement[]) {\n  candidates.forEach((candidate) => {\n    candidate.dataset.tabindex = candidate.getAttribute('tabindex') || '';\n    candidate.setAttribute('tabindex', '-1');\n  });\n  return () => {\n    candidates.forEach((candidate) => {\n      const prevTabIndex = candidate.dataset.tabindex as string;\n      candidate.setAttribute('tabindex', prevTabIndex);\n    });\n  };\n}\n\nfunction useResizeObserver(element: HTMLElement | null, onResize: () => void) {\n  const handleResize = useCallbackRef(onResize);\n  useLayoutEffect(() => {\n    let rAF = 0;\n    if (element) {\n      /**\n       * Resize Observer will throw an often benign error that says `ResizeObserver loop\n       * completed with undelivered notifications`. This means that ResizeObserver was not\n       * able to deliver all observations within a single animation frame, so we use\n       * `requestAnimationFrame` to ensure we don't deliver unnecessary observations.\n       * Further reading: https://github.com/WICG/resize-observer/issues/38\n       */\n      const resizeObserver = new ResizeObserver(() => {\n        cancelAnimationFrame(rAF);\n        rAF = window.requestAnimationFrame(handleResize);\n      });\n      resizeObserver.observe(element);\n      return () => {\n        window.cancelAnimationFrame(rAF);\n        resizeObserver.unobserve(element);\n      };\n    }\n  }, [element, handleResize]);\n}\n\nfunction getOpenState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nfunction makeTriggerId(baseId: string, value: string) {\n  return `${baseId}-trigger-${value}`;\n}\n\nfunction makeContentId(baseId: string, value: string) {\n  return `${baseId}-content-${value}`;\n}\n\nfunction whenMouse<E>(handler: React.PointerEventHandler<E>): React.PointerEventHandler<E> {\n  return (event) => (event.pointerType === 'mouse' ? handler(event) : undefined);\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = NavigationMenu;\nconst Sub = NavigationMenuSub;\nconst List = NavigationMenuList;\nconst Item = NavigationMenuItem;\nconst Trigger = NavigationMenuTrigger;\nconst Link = NavigationMenuLink;\nconst Indicator = NavigationMenuIndicator;\nconst Content = NavigationMenuContent;\nconst Viewport = NavigationMenuViewport;\n\nexport {\n  createNavigationMenuScope,\n  //\n  NavigationMenu,\n  NavigationMenuSub,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuContent,\n  NavigationMenuViewport,\n  //\n  Root,\n  Sub,\n  List,\n  Item,\n  Trigger,\n  Link,\n  Indicator,\n  Content,\n  Viewport,\n};\nexport type {\n  NavigationMenuProps,\n  NavigationMenuSubProps,\n  NavigationMenuListProps,\n  NavigationMenuItemProps,\n  NavigationMenuTriggerProps,\n  NavigationMenuLinkProps,\n  NavigationMenuIndicatorProps,\n  NavigationMenuContentProps,\n  NavigationMenuViewportProps,\n};\n"],"names":["createNavigationMenuScope","NavigationMenu","NavigationMenuSub","NavigationMenuList","NavigationMenuItem","NavigationMenuTrigger","NavigationMenuLink","NavigationMenuIndicator","NavigationMenuContent","NavigationMenuViewport","Root","Sub","List","Item","Trigger","Link","Indicator","Content","Viewport","React","ReactDOM","createContextScope","composeEventHandlers","Primitive","dispatchDiscreteCustomEvent","useControllableState","composeRefs","useComposedRefs","useDirection","Presence","useId","createCollection","DismissableLayer","usePrevious","useLayoutEffect","useCallbackRef","VisuallyHiddenPrimitive","NAVIGATION_MENU_NAME","Collection","useCollection","createCollectionScope","FocusGroupCollection","useFocusGroupCollection","createFocusGroupCollectionScope","createNavigationMenuContext","NavigationMenuProviderImpl","useNavigationMenuContext","ViewportContentProvider","useViewportContentContext","forwardRef","props","forwardedRef","__scopeNavigationMenu","value","valueProp","onValueChange","defaultValue","delayDuration","skipDelayDuration","orientation","dir","NavigationMenuProps","navigationMenu","setNavigationMenu","useState","composedRef","node","direction","openTimerRef","useRef","closeTimerRef","skipDelayTimerRef","isOpenDelayed","setIsOpenDelayed","setValue","prop","onChange","isOpen","hasSkipDelayDuration","window","clearTimeout","current","setTimeout","defaultProp","startCloseTimer","useCallback","handleOpen","itemValue","handleDelayedOpen","isOpenItem","useEffect","prevValue","SUB_NAME","subProps","context","rootNavigationMenu","NavigationMenuProvider","scope","isRootMenu","children","onItemSelect","onItemDismiss","onTriggerEnter","onTriggerLeave","onContentEnter","onContentLeave","viewport","setViewport","viewportContent","setViewportContent","Map","indicatorTrack","setIndicatorTrack","contentValue","contentData","prevContent","set","has","delete","LIST_NAME","listProps","list","position","onIndicatorTrackChange","ITEM_NAME","NavigationMenuItemContextProvider","useNavigationMenuItemContext","itemProps","autoValue","contentRef","triggerRef","focusProxyRef","restoreContentTabOrderRef","wasEscapeCloseRef","handleContentEntry","side","candidates","getTabbableCandidates","length","focusFirst","reverse","handleContentExit","removeFromTabOrder","TRIGGER_NAME","disabled","triggerProps","itemContext","ref","composedRefs","triggerId","makeTriggerId","baseId","contentId","makeContentId","hasPointerMoveOpenedRef","wasClickCloseRef","open","undefined","getOpenState","onPointerEnter","onPointerMove","whenMouse","onPointerLeave","onClick","onKeyDown","event","verticalEntryKey","entryKey","horizontal","vertical","key","onEntryKeyDown","preventDefault","content","prevFocusedElement","relatedTarget","wasTriggerFocused","wasFocusFromContent","contains","onFocusProxyEnter","LINK_NAME","LINK_SELECT","active","onSelect","linkProps","target","linkSelectEvent","CustomEvent","bubbles","cancelable","addEventListener","once","defaultPrevented","metaKey","rootContentDismissEvent","ROOT_CONTENT_DISMISS","checkForDefaultPrevented","INDICATOR_NAME","forceMount","indicatorProps","isVisible","Boolean","createPortal","NavigationMenuIndicatorImpl","getItems","activeTrigger","setActiveTrigger","setPosition","isHorizontal","items","triggerNode","find","item","handlePositionChange","size","offsetWidth","offsetHeight","offset","offsetLeft","offsetTop","useResizeObserver","left","width","transform","top","height","style","CONTENT_NAME","contentProps","commonProps","onContentFocusOutside","onRootContentClose","pointerEvents","ViewportContentMounter","onViewportContentChange","onViewportContentRemove","NavigationMenuContentImpl","prevMotionAttributeRef","handleClose","document","activeElement","focus","removeEventListener","motionAttribute","useMemo","values","map","index","indexOf","prevIndex","previousValue","isSelected","wasSelected","attribute","Event","dispatchEvent","onFocusOutside","onPointerDownOutside","isTrigger","some","isRootViewport","isMetaKey","altKey","ctrlKey","isTabKey","currentTarget","focusedElement","findIndex","candidate","isMovingBackwards","shiftKey","nextCandidates","slice","onEscapeKeyDown","VIEWPORT_NAME","viewportProps","NavigationMenuViewportImpl","viewportImplProps","onViewportChange","viewportContentContext","setSize","setContent","viewportWidth","viewportHeight","activeContentValue","handleSizeChange","Array","from","isActive","FOCUS_GROUP_NAME","FocusGroup","groupProps","ARROW_KEYS","FOCUS_GROUP_ITEM_NAME","FocusGroupItem","isFocusNavigationKey","includes","candidateNodes","prevItemKey","prevKeys","currentIndex","container","nodes","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","isHiddenInput","tagName","type","hidden","FILTER_SKIP","tabIndex","FILTER_ACCEPT","nextNode","push","currentNode","previouslyFocusedElement","forEach","dataset","tabindex","getAttribute","setAttribute","prevTabIndex","element","onResize","handleResize","rAF","resizeObserver","ResizeObserver","cancelAnimationFrame","requestAnimationFrame","observe","unobserve","handler","pointerType"],"version":3,"file":"index.js.map"}